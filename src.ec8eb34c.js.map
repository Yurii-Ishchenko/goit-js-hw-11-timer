{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","targetDate","init","getDeltaTime","setInterval","currentTime","Date","now","deltaTime","getTimeComponents","time","pad","Math","floor","updateClockface","value","String","padStart","console","log","textContent","timer","selector"],"mappings":";AA0DA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1DA,IAAMA,EAAO,CAETC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAI3BI,EAAAA,WAC0B,SAAA,EAAA,GAAdC,IAAAA,EAAAA,EAAAA,WAAc,EAAA,KAAA,GACnBA,KAAAA,WAAaA,EACbC,KAAAA,OA8Cb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OA3CW,MAAA,WAAA,IAAA,EAAA,KACEC,KAAAA,eACLC,YAAY,WACR,EAAKD,gBACN,OAuCX,CAAA,IAAA,eApCmB,MAAA,WACLE,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKP,WAAaI,EAC/BI,KAAAA,kBAAkBD,KAiC/B,CAAA,IAAA,oBA9BsBE,MAAAA,SAAAA,GACRhB,IAAAA,EAAO,KAAKiB,IAAIC,KAAKC,MAAMH,EAAQ,QACnCb,EAAQ,KAAKc,IACfC,KAAKC,MAAOH,EAAQ,MAAyB,OAE3CZ,EAAO,KAAKa,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MACxDX,EAAO,KAAKY,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,MAEnDI,KAAAA,gBAAgBpB,EAAMG,EAAOC,EAAMC,KAsBhD,CAAA,IAAA,MAnBQgB,MAAAA,SAAAA,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAkBzC,CAAA,IAAA,kBAfoBvB,MAAAA,SAAAA,EAAMG,EAAOC,EAAMC,GACzBW,IAAAA,EAAUhB,GAAAA,OAAAA,GAAOG,OAAAA,GAAQC,OAAAA,GAAOC,OAAAA,GACtCmB,QAAQC,IAAIT,GAEZjB,EAAKC,KAAK0B,YAAiB1B,GAAAA,OAAAA,GAC3BD,EAAKI,MAAMuB,YAAiBvB,GAAAA,OAAAA,GAC5BJ,EAAKK,KAAKsB,YAAiBtB,GAAAA,OAAAA,GAC3BL,EAAKM,KAAKqB,YAAiBrB,GAAAA,OAAAA,OAQnC,EAjDMC,GAiDAqB,EAAQ,IAAIrB,EAAe,CAC/BsB,SAAU,WACVrB,WAAY,IAAIK,KAAK","file":"src.ec8eb34c.js","sourceRoot":"..\\src","sourcesContent":["const refs = {\r\n    \r\n    days: document.querySelector('[data-value=\"days\"]'),\r\n    hours: document.querySelector('[data-value=\"hours\"]'),\r\n    mins: document.querySelector('[data-value=\"mins\"]'),\r\n    secs: document.querySelector('[data-value=\"secs\"]')\r\n}\r\n\r\n\r\nclass CountdownTimer {\r\n    constructor({ targetDate }) {\r\n        this.targetDate = targetDate;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.getDeltaTime();\r\n        setInterval(() => {\r\n            this.getDeltaTime();\r\n        }, 1000);\r\n    }\r\n\r\n    getDeltaTime() {\r\n        const currentTime = Date.now();\r\n        const deltaTime = this.targetDate - currentTime;\r\n        this.getTimeComponents(deltaTime);\r\n    }\r\n\r\n    getTimeComponents(time) {\r\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        const hours = this.pad(\r\n            Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n        );\r\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n        this.updateClockface(days, hours, mins, secs);\r\n    }\r\n\r\n    pad(value) {\r\n        return String(value).padStart(2, '0');\r\n    }\r\n\r\n    updateClockface(days, hours, mins, secs) {\r\n        const time = `${days}${hours}${mins}${secs}`;\r\n        console.log(time);\r\n    \r\n        refs.days.textContent = `${days}`;\r\n        refs.hours.textContent = `${hours}`;\r\n        refs.mins.textContent = `${mins}`;\r\n        refs.secs.textContent = `${secs}`;\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2021'),\r\n});"]}